AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  VPC:
    Type: String
  InternetGateway:
    Type: String

Resources:
  # Route table
  MainRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRouteTableEntry:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MainRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # AZ 1
  MasterSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: "AWS::Region"
      Tags:
        - Key: Name
          Value: jenkins-master-subnet1

  MasterSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref MasterSubnet1

  SlavesSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.32/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: "AWS::Region"
      Tags:
        - Key: Name
          Value: jenkins-slave-subnet1

  JenkinsSlavesSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref SlavesSubnet1

  # AZ 2
  MasterSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.16/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: "AWS::Region"
      Tags:
        - Key: Name
          Value: jenkins-master-subnet2

  MasterSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref MasterSubnet2

  SlavesSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.48/28
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: "AWS::Region"
      Tags:
        - Key: Name
          Value: jenkins-slave-subnet2

  SlavesSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainRouteTable
      SubnetId: !Ref SlavesSubnet2

Outputs:
  MasterSubnet1:
    Value: !Ref MasterSubnet1
  SlavesSubnet1:
    Description: Use this in the "Subnet IDs for VPC" section in Jenkins "Configure Clouds"
    Value: !Ref SlavesSubnet1
  MasterSubnet2:
    Value: !Ref MasterSubnet2
  SlavesSubnet2:
    Description: Use this in the "Subnet IDs for VPC" section in Jenkins "Configure Clouds"
    Value: !Ref SlavesSubnet2
